<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6ED688CD-50C6-45B2-8AE0-759D28E468AE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ORM_Monitor</RootNamespace>
    <AssemblyName>ORM-Monitor</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>snKey.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\$(Configuration)\ORM-Monitor.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="log4net, Version=1.2.15.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a, processorArchitecture=MSIL">
      <HintPath>..\packages\log4net.2.0.5\lib\net45-full\log4net.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.8.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="RabbitMQ.Client, Version=3.6.0.0, Culture=neutral, PublicKeyToken=89e7d7c5feba84ce, processorArchitecture=MSIL">
      <HintPath>..\packages\RabbitMQ.Client.3.6.0\lib\net45\RabbitMQ.Client.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="ReflectSoftware.Insight, Version=5.5.2.1510, Culture=neutral, PublicKeyToken=c78ddbdaf1f32b08, processorArchitecture=MSIL">
      <HintPath>..\packages\ReflectSoftware.Insight.5.5.2\lib\net45\ReflectSoftware.Insight.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="IServiceTask.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ITaskScheduler.cs" />
    <Compile Include="Models\ServiceTask.cs" />
    <Compile Include="Models\TaskEvent.cs" />
    <Compile Include="Models\TaskEventArgs.cs" />
    <Compile Include="Models\TaskHandler.cs" />
    <Compile Include="Controllers\_CanceledEvent.cs" />
    <Compile Include="Controllers\_CompletedEvent.cs" />
    <Compile Include="Controllers\_RuningEvent.cs" />
    <Compile Include="Controllers\_TimeoutEvent.cs" />
    <Compile Include="Controllers\Async-IO.cs" />
    <Compile Include="Scheduler.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="snKey.snk" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- Code to merge the assemblies into one:setup.exe -->
  <PropertyGroup>
    <ILMergeTarget>..\NuGet\ILMerge.targets</ILMergeTarget>
  </PropertyGroup>
  <Target Name="ILMerge" />
  <Import Project="$(ILMergeTarget)" Condition="Exists('$(ILMergeTarget)')" />
  <Target Name="AfterBuild" DependsOnTargets="ILMerge" />
  <Target Name="Clean">
    <RemoveDir Directories="bin;obj" />
    <RemoveDir Directories="..\NuGet\lib\;..\NuGet\bin\;..\NuGet\obj\" Condition="Exists('$(ILMergeTarget)')" />
  </Target>
</Project>